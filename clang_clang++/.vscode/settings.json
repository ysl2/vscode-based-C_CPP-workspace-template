{
    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法交互
    "code-runner.fileDirectoryAsCwd": true, // 将code runner终端的工作目录切换到文件目录再运行，对依赖cwd的程序产生影响；如果为false，executorMap要加cd $dir
    "code-runner.executorMap": {
        "c": "clang $fileName -o $fileNameWithoutExt.exe -Wall -O2 -m64 -lm -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir$fileNameWithoutExt",
        "cpp": "clang++ $fileName -o $fileNameWithoutExt.exe -Wall -O2 -m64 -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++14 && $dir$fileNameWithoutExt"
        // "cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt.exe  && $dir$fileNameWithoutExt"
    }, // 设置code runner的命令行
    "code-runner.saveFileBeforeRun": true, // run code前保存
    "code-runner.preserveFocus": false, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
    "code-runner.clearPreviousOutput": false, // 每次run code前清空属于code runner的终端消息
    "C_Cpp.clang_format_sortIncludes": true, // 格式化时调整include的顺序（按字母排序）
    "C_Cpp.intelliSenseEngine": "Default", // 可以为Default或Tag Parser，后者较老，功能较简单。具体差别参考cpptools插件文档
    "C_Cpp.errorSquiggles": "Disabled", // 因为有clang的lint，所以关掉
    "editor.formatOnType": true, // 输入时就进行格式化，默认触发字符较少，分号可以触发
    //"editor.snippetSuggestions": "top", // snippets代码优先显示补全
    "editor.find.autoFindInSelection": "always",
    "C_Cpp.intelliSenseEngineFallback": "Disabled",
    "clang.cflags": [ // 控制c语言静态检测的参数
        "--target=x86_64-w64-mingw",
        "-std=c11",
        "-Wall"
    ],
    "clang.cxxflags": [ // 控制c++静态检测时的参数
        "--target=x86_64-w64-mingw",
        "-std=c++14",
        "-Wall"
    ],
    "clang.completion.enable": false, // 效果稍好，但太卡，故关掉
    // 代码风格
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Chromium, IndentWidth: 4, ColumnLimit: 0, SpacesBeforeTrailingComments: 2, Cpp11BracedListStyle: true, PointerAlignment: Right}",
    "files.associations": {
        "iostream": "cpp"
    },
}
